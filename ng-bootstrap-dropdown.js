// Generated by CoffeeScript 1.6.2
(function() {
  'use strict';  angular.module('bootstrap.dropdown', []).directive('dropdown', [
    '$compile', function($compile) {
      return {
        restrict: "AE",
        replace: true,
        scope: {
          att: '=',
          data: '=',
          label: '=',
          children: '=',
          click: '='
        },
        link: function(scope, iElement, iAttrs) {
          var newElement, template;

          scope.hasChildFields = function(ele) {
            var _ref;

            if ((angular.isArray(ele) && ele.length) || (ele != null ? (_ref = ele[scope.children]) != null ? _ref.length : void 0 : void 0) > 0) {
              return 'dropdown-submenu';
            } else {
              return false;
            }
          };
          scope.getLabelName = function(ele) {
            if (scope.label) {
              return ele[scope.label];
            } else {
              return ele;
            }
          };
          template = "<ul ng-if=\"hasChildFields(data)\" class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdownMenu\"> <!-- first class dropdown -->\n    <li ng-class=\"hasChildFields(firstElement)\" ng-repeat=\"(firstKey, firstElement) in data\">\n        <a class='intter-link' ng-click=\"click(firstKey, firstElement, att)\" tabindex=\"-1\"> {{ getLabelName(firstElement) | getEmptyLabel | noHTML }} </a>";
          if (scope.hasChildFields(scope.data)) {
            template += " <ul data-dropdown data-data=\"firstElement[children]\" data-att=\"att\" data-label=\"label\" data-children=\"children\" data-click=\"click\" ></ul> ";
          }
          template += "</li></ul>";
          newElement = angular.element(template);
          $compile(newElement)(scope);
          return iElement.replaceWith(newElement);
        }
      };
    }
  ]).filter('getEmptyLabel', [
    function() {
      return function(input) {
        if (input) {
          return input;
        } else {
          return '-- Empty label --';
        }
      };
    }
  ]).filter('noHTML', [
    function() {
      return function(input) {
        return input.replace(/<(?:.|\n)*?>/gm, '');
      };
    }
  ]);

}).call(this);

/*
//@ sourceMappingURL=ng-bootstrap-dropdown.map
*/
